import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes, MessageHandler, filters

ADMINS = {509049673}

staff = {
    "–ö–∞–ª—å—è–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞": {
        "–ï–≥–æ—Ä üî•": None,
        "–ñ–µ–Ω—è üî•": None,
        "–ò–ª—å—è üî•": None,
        "–î–∏–º–∞ üî•": None,
        "–ü–∞—à–∞ üî•": None,
        "–î–µ–Ω–∏—Å üî•": None
    },
    "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã": {
        "–ê–ª–∏–Ω–∞ üåø": None,
        "–ê—Ä–∏–Ω–∞ üåø": None,
        "–ö–∞—Ç—è üåø": None,
        "–ö—Ä–∏—Å—Ç–∏–Ω–∞ üåø": None
    }
}

WELCOME_MESSAGE = (
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π ü§ç, —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –æ—Ç –Ω–∞—à–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è, "
    "–±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–º—É —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —á–∞–µ–≤—ã–º–∏ –∫–æ–≥–æ-—Ç–æ –∏–∑ —Ä–µ–±—è—Ç –∑–∞ –∏—Ö —Ä–∞–±–æ—Ç—É. ü´∂üèª\n"
    "–ö–æ–º—É —Å–µ–≥–æ–¥–Ω—è —Ö–æ—á–µ—Ç—Å—è —Å–∫–∞–∑–∞—Ç—å ¬´—Å–ø–∞—Å–∏–±–æ¬ª?"
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(WELCOME_MESSAGE, reply_markup=main_menu())

def main_menu():
    keyboard = [
        [InlineKeyboardButton("–ö–∞–ª—å—è–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞", callback_data="hookah")],
        [InlineKeyboardButton("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã", callback_data="admins")]
    ]
    return InlineKeyboardMarkup(keyboard)

def generate_staff_keyboard(group):
    keyboard = [
        [InlineKeyboardButton(name, callback_data=f"user|{group}|{name}")]
        for name in staff[group]
    ]
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])
    return InlineKeyboardMarkup(keyboard)

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "hookah":
        await query.edit_message_text("–í—ã–±–µ—Ä–∏ –º–∞—Å—Ç–µ—Ä–∞:", reply_markup=generate_staff_keyboard("–ö–∞–ª—å—è–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞"))
    elif query.data == "admins":
        await query.edit_message_text("–í—ã–±–µ—Ä–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", reply_markup=generate_staff_keyboard("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"))
    elif query.data == "back":
        await query.edit_message_text(WELCOME_MESSAGE, reply_markup=main_menu())
    elif query.data.startswith("user|"):
        _, group, name = query.data.split("|")
        link = staff[group][name]
        if link:
            await query.edit_message_text(f"–í–æ—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è —á–∞–µ–≤—ã—Ö –¥–ª—è {name}:\n{link}", reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=group.lower())]]))
        else:
            await query.edit_message_text(f"{name} –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª —Å—Å—ã–ª–∫—É –¥–ª—è —á–∞–µ–≤—ã—Ö üòî", reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=group.lower())]]))

async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π /start üôÇ")

if __name__ == "__main__":
    token = os.getenv("TOKEN")
    app = ApplicationBuilder().token(token).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_callback))
    app.add_handler(MessageHandler(filters.COMMAND, unknown))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
